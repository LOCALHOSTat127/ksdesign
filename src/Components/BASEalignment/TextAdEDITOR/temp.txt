 {
                applicationStates.isLOADING === false ?
                    <>
                        <section
                            data-editor-type="classified-text-ad" className="TextEditor__ground">
                            {/* Editro-box/Preiew/controlls/HeadingPrice */}
                            <div className="main__upper__containor">

                                <div className={`edit_n_preview__outer ${showPreview && "toggle__preview"}`}>
                                    <div className="textad__area">
                                        <textarea

                                            onChange={handleTyping}
                                            placeholder='Type your AD here...'
                                            name="text__body"
                                            id="textarea"
                                            cols="auto"
                                            rows="12"
                                        ></textarea>
                                    </div>
                                    <div style={{
                                        minHeight: "270px"
                                    }} className="preview__box" id="previewbox">
                                        <h2 className="preview__heading">Preview in Newspaper</h2>
                                        <div
                                            style={{
                                                backgroundColor: `${adBGcolor}`
                                            }}
                                            className={`preview__box__inner__outer ${isBorderOn && "screen__border"}`} >
                                            <div className={`screen__heilight  ${isTickOn && "active__heilight"}`} ></div>
                                            <p className="preview__Text">{ADTEXT}</p>
                                        </div>
                                    </div>
                                </div>
                                <div className="sidepanel">
                                    <div className="bg__colors__outer">

                                        <div className="colors__palet">
                                            {COLORS_CONFIG.map(({ isActive, clr_name, value }) => {
                                                return (
                                                    <>
                                                        <div style={{
                                                            backgroundColor: `${value}`,
                                                            display: "flex",
                                                            alignItems: "center"
                                                        }} className="bgcls__jscket">
                                                            <input
                                                                disabled={isActive === true ? false : true}
                                                                className='radio__Clr'
                                                                type="radio"
                                                                data-clr={clr_name}
                                                                value={value}
                                                                name={clr_name}
                                                                id={value}
                                                                checked={adBGcolor === value}
                                                                onChange={handleBGclr}
                                                            />
                                                            <p style={{
                                                                textTransform: "capitalize",
                                                                color: "black",
                                                                fontWeight: "600",
                                                                fontSize: "clamp(12px,4vw,12px)",
                                                                width: "100%",
                                                                textAlign: "center",
                                                            }} className="bg__cls">{clr_name}</p>
                                                        </div>
                                                    </>
                                                )
                                            })}

                                        </div>



                                    </div>

                                    <div className="sub__controlls flex  flex-aic">

                                        {/* Marker & Border */}
                                        <div
                                            style={{
                                                boxShadow: `${isBorderOn === true ? "rgba(214, 35, 3, 0.3) 0px 0px 0px 1px" : "rgba(3, 102, 214, 0.3) 0px 0px 0px 2px"}`

                                            }}
                                            className="border__box checkboxouter flex fd-col flex-aic">
                                            <input
                                                disabled={configurations?.other_pallet_rules.isBorder === false ? true : false}
                                                className='border__cb checkbox'
                                                type="checkbox"
                                                name="ad__border"
                                                id="ad__border"
                                                checked={isBorderOn}


                                                onChange={(e) => {
                                                    setBorder(!isBorderOn);
                                                }}
                                            />

                                            Border <span style={{
                                                fontSize: "8px"
                                            }} >(25% Extra Charge)</span>

                                        </div>


                                        {/* Marker & Border */}
                                        <div
                                            style={{
                                                boxShadow: `${isTickOn === true ? "rgba(214, 35, 3, 0.3) 0px 0px 0px 1px" : "rgba(3, 102, 214, 0.3) 0px 0px 0px 2px"}`,
                                            }}
                                            className="marker__box checkboxouter flex fd-col flex-aic">
                                            <input
                                                disabled={configurations?.other_pallet_rules.isTick === false ? true : false}
                                                className='marker__cb checkbox'
                                                type="checkbox"
                                                name="ad__marker"
                                                id="ad__marker"
                                                checked={isTickOn}
                                                onChange={(e) => {
                                                    setTick(!isTickOn);
                                                }}
                                            />

                                            Marker <span style={{
                                                fontSize: "8px"
                                            }} >(25% Extra Charge)</span>

                                        </div>

                                    </div>


                                </div>
                                <div className="controlls__outer">
                                    <div className="sample__disp__btn__jacket cont_jack">
                                        <Button sx={{
                                            padding: "10px 10px",
                                            width: "100%",
                                            borderRadious: "none",
                                            boxShadow: "rgba(0, 0, 0, 0.16) 0px 1px 4px",

                                        }} id="display__sample" disableElevation variant="outlined">
                                            Sample
                                        </Button>
                                    </div>
                                    <div className="show__preview__btn__jacket cont_jack">

                                        <Button sx={{
                                            padding: "10px 10px",
                                            width: "100%",
                                            boxShadow: "rgba(0, 0, 0, 0.16) 0px 1px 4px",
                                            borderRadious: "0px",
                                            background: "black",
                                            color: "white",
                                            '&hover': "none",
                                            textTransform: "capitalize",
                                            letterSpacing: "2px",
                                            fontWeight: "500",
                                            '&:hover': {
                                                background: "black",
                                            }
                                        }} onClick={handlePreview} id="show__preview" disableElevation variant="contained" startIcon={showPreview === 1 ? <EditSvg style={{
                                            width: "100%",
                                            height: "100%",
                                            maxWidth: "14px",
                                        }} /> : <ShowSVG style={{
                                            width: "100%",
                                            height: "100%",
                                            maxWidth: "14px"
                                        }} />}>
                                            {showPreview === 1 ? "Edit" : "Preview"}
                                        </Button>
                                    </div>
                                    <div className="update__price__btn__jacket cont_jack">
                                        <Button sx={{
                                            padding: "10px 14px",
                                            boxShadow: "rgba(0, 0, 0, 0.16) 0px 1px 4px",
                                            borderRadious: "0px",
                                            background: "black",
                                            color: "white",
                                            textTransform: "capitalize",
                                            letterSpacing: "2px",
                                            fontWeight: "500",
                                            '&:hover': {
                                                background: "black",
                                            },
                                            width: "100%"
                                        }} onClick={handleUpdatePrice} id="update__price" disableElevation variant="contained" startIcon={<UpdateSvg style={{
                                            width: "100%",
                                            height: "100%",
                                            maxWidth: "14px"
                                        }} />}>
                                            Estimate
                                        </Button>

                                    </div>
                                </div>
                                <div className="heading__outer">
                                    <p className="words__outer stat__outer__mobile__stat">
                                        <p className="int words">{words}</p>
                                        <p className="sep_cover">
                                            <div className="sep"></div>
                                            <p className="stat__outer__mobile__stat__name">
                                                Words
                                            </p>
                                        </p>
                                    </p>
                                    <p className="chars__outer stat__outer__mobile__stat chars">
                                        <p className="int chars">{chars}</p>
                                        <p className="sep_cover">
                                            <div className="sep"></div>
                                            <p className="stat__outer__mobile__stat__name">
                                                Chars
                                            </p>
                                        </p>
                                    </p>

                                    <p className="words__outer stat__outer__mobile__stat lines">
                                        <p style={{

                                            color: "rgb(9 112 0)",
                                        }} className="int lines">₹{"   "}{price}</p>
                                        <p className="sep_cover">
                                            <div className="sep"></div>
                                            <p className="stat__outer__mobile__stat__name">
                                                AD Cost
                                            </p>
                                        </p>
                                    </p>

                                </div>


                                <div className="special__enhancement__box">
                                    <p className="heading">Special Enhancement</p>
                                    <div className={`translation__enhancement enhancement`}>
                                        <input
                                            checked={enhansments.istranslationreq}
                                            onChange={(e) => {
                                                setEnhansments((prev) => ({
                                                    ...prev,
                                                    istranslationreq: (!enhansments.istranslationreq)
                                                }))
                                            }}
                                            className='enhensmnt__checkbox'
                                            type="checkbox"
                                            name={`isTranslation`}
                                            id={`translation__checkbox`} />
                                        <p>
                                            Language Translation
                                            <span>Let your Ad copy Translate in sevral Different languages for batter rechablity.</span>
                                        </p>
                                    </div>
                                </div>
                            </div>

                            {/* Newspaper related information & price list */}
                            <div className="second__lower__containor">


                                <div className="ad__heading__containor">
                                    <h2 className="panel__heading">
                                        <h2>AD Heading</h2>
                                        <p>Please Provide Heading & sub Heading for your AD.</p>
                                    </h2>

                                    <div className="heading__window">
                                        <FormControl sx={{ m: 1, maxWidth: "200px", minWidth: "100%" }} size="meadium">
                                            <InputLabel id="select__category__main">Sub-Category</InputLabel>
                                            <Select
                                                labelId="select__category__main"
                                                id="select__category__main"

                                                label="Sub-Category"
                                                onChange={((e) => {
                                                    setActiveCategory((prev) => e.target.value);
                                                })}
                                            >

                                                <MenuItem value={null}>
                                                    <em>None</em>
                                                </MenuItem>



                                            </Select>
                                        </FormControl>


                                        <FormControl sx={{ m: 1, maxWidth: "200px", minWidth: "100%" }} size="meadium">
                                            <InputLabel id="select__classification">Classification</InputLabel>
                                            <Select
                                                labelId="select__classification"
                                                id="select__classification"

                                                onChange={((e) => {
                                                    setActiveSubCategory((prev) => prev = e.target.value);
                                                })}

                                                label="Classification"
                                            >
                                                <MenuItem value="">
                                                    <em>None</em>
                                                </MenuItem>

                                            </Select>
                                        </FormControl>


                                        <FormControl id="last__select" sx={{ m: 1, maxWidth: "200px", minWidth: "100%" }} size="meadium">
                                            <InputLabel id="select__sub__classification">Sub-Classification</InputLabel>
                                            <Select
                                                labelId="select__sub__classification"
                                                id="select__sub__classification"

                                                label="Sub-Classification"
                                            >
                                                <MenuItem value="">
                                                    <em>None</em>
                                                </MenuItem>

                                            </Select>
                                        </FormControl>
                                    </div>
                                </div>

                                <div className="proceed_box">
                                    <Button
                                        className="proceed_box__btn"
                                        onClick={STEP_FOWRAED_HANDLER}
                                        id="update__price" variant="contained">
                                        Proceed to Next Step
                                        <img src={proceedArrow} alt="proceed" className='svg' />
                                    </Button>
                                </div>

                                <div className="price__list">
                                    <h2>Basic Rates </h2>
                                    <div className="price__slider">
                                        {configurations.price_config.editions__prices.map((edition) => {
                                            return (
                                                <>
                                                    <div className="rate__card">
                                                        <h3 className="newspaper__name">
                                                            {edition.edition_name}
                                                        </h3>
                                                        <div className="prices">
                                                            <p className="price__primery">Rs. {edition.basePrice} / {configurations.price_config.min_sep} {configurations.price_config.sep}</p>
                                                            <p className="price__extra">Rs. {edition.perExtraSep} /extra {configurations.price_config.sep}</p>
                                                        </div>
                                                    </div>
                                                </>
                                            )
                                        })}

                                    </div>
                                </div>

                                <div className="from__newspaper">
                                    <h2>From the Newspaper </h2>
                                    <div className="innertext">
                                        <p className="newspapername">{configurations.from_paper && configurations.from_paper.paper_name} : </p>
                                        <p className="innertext__inline">{configurations.from_paper && configurations.from_paper.paper_txt}</p>
                                    </div>
                                </div>
                            </div>
                        </section >
                    </> : <div className="loading__box">
                        <CircularProgress size={20} />
                        <div style={{
                            display: "flex",
                            flexDirection: "column",
                        }}>
                            <strong>Please wait</strong>
                            <p>Loading configurations...</p>
                        </div>
                    </div>
            }